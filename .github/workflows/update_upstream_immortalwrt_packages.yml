name: 拉取并同步上游immortalwrt的packages源码

on:
  schedule:
    - cron: '0 3 */3 * *'   # 每三天 UTC 03:00 运行（北京时间11点）
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_PAT }}

    steps:
      - name: 获取 packages.patch
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 配置 Git 用户信息
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: 克隆官方 ImmortalWRT 上游源码到临时目录，更新 upstream 分支（强制覆盖）
        run: |
          git clone -b openwrt-24.10 --single-branch --depth 1 https://github.com/immortalwrt/packages.git upstream_tmp
          cd upstream_tmp
          rm -rf .git .github .vscode
          git init
          git add .
          git commit -m "同步官方 upstream openwrt-24.10 源码"
          git remote add origin https://ZT229:${{ secrets.GH_PAT }}@github.com/ZT229/packages.git
          git branch -M upstream
          git push -f origin upstream
          cd

      - name: 克隆我的远程仓库，应用 patch 到 upstream 并推送
        run: |
          git clone https://ZT229:${{ secrets.GH_PAT }}@github.com/ZT229/packages.git packages_repo
          cp packages.patch packages_repo/
          cd packages_repo
          git checkout upstream
          
          git apply packages.patch
          rm -f packages.patch

          git add .
          git commit -m "在 upstream 分支应用 packages.patch"
          git push origin upstream

      - name: 合并 upstream 分支到 main 并推送
        run: |
          git clone https://ZT229:${{ secrets.GH_PAT }}@github.com/ZT229/packages.git merge_repo
          cd merge_repo

          # 拉取并创建本地 upstream 分支
          git fetch origin upstream:upstream

          git checkout main
          git merge upstream --allow-unrelated-histories --no-edit || {
            echo "❌ 合并冲突，请手动解决"
            exit 1
          }

          git push origin main